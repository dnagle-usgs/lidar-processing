#!/opt/alps/bin/tclsh
# vim: set tabstop=3 softtabstop=3 shiftwidth=3 shiftround autoindent expandtab:

package require cmdline
source /opt/alps/lidar-processing/src/tcl/tilescan-1.0.tm

# Summarizes the contents of an Index_Tiles directory. To use, change directory
# to /path/to/my/data/Index_Tiles (or similar) and run:
#   idx_tiles_summarize
# Alternately, you can provide the path:
#   idx_tiles_summarize /path/to/my/data/Index_Tiles
# You can also filter it by one or more search strings:
#   idx_tiles_summarize "*.pbd"
#   idx_tiles_summarize "*.pbd" "*.edf"
# And you can provide a path AND filter:
#   idx_tiles_summarize /path/to/my/data/Index_Tiles "*.pbd" "*.edf"
# You can also ask it to keep patterns that have different datums but are
# otherwise the same together with the -d option:
#   idx_tiles_summarize -d
# It can be used with other arguments as well:
#   idx_tiles_summarize -d /path/to/my/data/Index_Tiles "*.pbd"
# Whatever you run, it'll print a nice summary to your screen with the
# following columns:
#   Most recent date the pattern was modified (YYYY-MM)
#   The user who owns the files (or "(varies)" if more than one person)
#   The number of files associated with this pattern
#   The pattern (search string aka glob)
# For example:
#   2006-10 root 2 *n88_20050913_v_b400_w50_n3_rcf_mf.edf.bz2
#   2006-10 root 2 *n88_20050913_v_b400_w50_n3_rcf_mf.pbd.bz2
#   2006-10 root 3 *n88_20050913_v_b500_w200_n3_fs_rcf_mf.edf.bz2
#   2006-10 root 3 *n88_20050913_v_b500_w200_n3_fs_rcf_mf.pbd.bz2

proc handle_args {} {
   set dirname [pwd]
   set globs [list]
   set datumsort 0

   set options {
      {d "keep files with different datums together"}
   }
   set usage ": idx_tiles_summarize \[options] \[path] \[pattern ...]\noptions:"
   array set params [::cmdline::getoptions ::argv $options $usage]

   if {$params(d)} {
      set datumsort 1
   }
   foreach item $::argv {
      if {[file isdirectory [file join [pwd] $item]]} {
         set dirname [file join [pwd] $item]
      } elseif {[regexp \\* $item]} {
         lappend globs $item
      } else {
         puts "Unknown command line argument, aborting: $item"
         exit
      }
   }

   return [list $dirname $globs $datumsort]
}

proc main {dir globs datumsort} {
   puts -nonewline [::tilescan::report $dir $globs $datumsort]
}

main {*}[handle_args]
