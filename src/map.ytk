#
# $Id$


#############
#   Map 
#############

 proc restore_map_defaults { } {
   global _map
   set _map(path) 		"~/lidar-processing/maps/"
   set _map(coast_color)	black
   set _map(window)		6
   set _map(most_recent_map) 	""
 }


proc setmapwindow {} {
 global _map 
  exp_send "window,$_map(window); limits, square=1;\r"
  expect ">"
}

proc plot_last_map {utm} {
 global _map 
   setmapwindow
   exp_send "show_map, dllmap, color=\"$_map(coast_color)\",utm=$utm \r"
  expect ">"
}

proc load_fp { } {
 global _map w

   set fn [ tk_getOpenFile -initialdir "$_map(path)" \
	-filetypes { \
	  {{ Fp Files} {.fp} }
	  {{ All files} {*}    }
         } ]
   if { $fn != "" } {
     setmapwindow
     exp_send "fp=read_fp( \"$fn\", plot=1)\r"
   }
}

proc load_map {utm} {
 global _map w

   set fn [ tk_getOpenFile -initialdir "$_map(path)" \
	-filetypes { \
	  {{ PBD Files} {.pbd} }
	  {{ All files} {*}    }
         } ]
   if { $fn != "" } {
     setmapwindow
     exp_send "load_map, color=\"$_map(coast_color)\", ffn=\"$fn\", utm=$utm; \
               limits\r"
     set _map(most_recent_map) $fn;
     $w.mb.map entryconfigure 2 -label "Load ([ file tail $_map(most_recent_map)])"
   }
}

 restore_map_defaults
 restore_eaarl_options "map.options" _map

 $w.mb.map add command -label "Load a Pbd Coastline..." -command load_map  
 $w.mb.map add command -label "Load ([ file tail $_map(most_recent_map)])" \
	-command {
    if { $_map(most_recent_map) != "" } {
    setmapwindow
    exp_send "load_map, color=\"$_map(coast_color)\", ffn=\"$_map(most_recent_map)\"; \
               limits\r"
    }
 }

 $w.mb.map add command     -label "Limits" -command {
   setmapwindow
   exp_send "limits\r"
 }

 $w.mb.map add command     -label "Fma" -command {
   setmapwindow
   exp_send "fma\r"
 }

 $w.mb.map add command     -label "Redraw last map" -command plot_last_map
 $w.mb.map add command     -label "Save Map Options" -command { 
    save_eaarl_options map.options _map
 }


 $w.mb.map add separator
 $w.mb.map add command     -label "Coastline Color" 
 set clist "black red blue green cyan magenta yellow white"
 foreach a $clist {
   $w.mb.map add radiobutton -label [ string totitle $a ] \
	-variable _map(coast_color) -value $a
 }


  if { [info exists utm  ] == 0 } {
    set utm 0;
  }





