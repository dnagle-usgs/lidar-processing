/*
 $Id$

  rbtans.i
  This program reads a binary file of tans-vector data generated by
  the tans2bin.c program.  The input data file begines with a single
  32 bit integer which contains the number of tans sample points following
  it in the file.  The points which follow are single precision floating
  point binary values in the following order, sow, roll, pitch, heading.  sow
  is seconds of the week, and the rest are in degrees with pitch and roll 
  varying from -180:+180 and heading from 0:360.
  

   tans(1,)     seconds of the week.  do a "mod 86400" to get sod
   tans(2,) 	roll
   tans(3,)	pitch
   tans(4,)	heading

History:
 11/13/01  Modified to: 1) convert time from sow, to sod, 2) check and
           correct for midnight rollover. -WW

*/

struct TANS {
  float sod;
  float roll;
  float pitch;
  float heading;
};


require, "sel_file.i"
require, "ytime.i"
write,"rbtans.i as of 11/18/2001 loaded"

plmk_default,msize=.1

func rbtans( junk ) {

if ( _ytk ) {
    ifn  = get_openfn( initialdir="/data/0/", filetype="*.ybin" );
    ff = split_path( ifn, -1 );
    data_path = ff(1);
} else {
 if ( is_void(data_path) )
   data_path = rdline(prompt="Enter data path:");
 ifn = sel_file(ss="*.ybin", path=data_path+"/tans/")(1);
}


n = int(0)
idf = open( ifn, "rb");

// get the integer number of records
_read, idf,  0, n

tans = array( float, 4, n);
_read(idf, 4, tans);

mxroll = tans(2, ) (max)
mnroll = tans(2, ) (min)

// compute seconds of the day
tans(1,) = tans(1,) % 86400;

// check and correct midnight rollover
  q = where( tans(1, ) < 0 );		// look for neg spike
  if ( numberof(q) ) {			// if found, then correct
    rng = q(1)+1:dimsof(tans(1,) )(2);  // determine values to correct
    tans(1,) += 86400;			// add 86400 seconds
  }


write,format="%s", 
              "               Min          Max\n"
write, format="  SOD:%14.3f %14.3f %6.2f hrs\n", tans(1,min), tans(1,max), 
	(tans(1,max)-tans(1,min))/ 3600.0
write, format=" Roll:%14.3f %14.3f\n", tans(2,min), tans(2,max)
write, format="Pitch:%14.3f %14.3f\n", tans(3,min), tans(4,max)
 t = array( TANS, dimsof(tans)(3) );
 t.sod     = tans(1,);
 t.roll    = tans(2,);
 t.pitch   = tans(3,);
 t.heading = tans(4,);
 return t;
}




