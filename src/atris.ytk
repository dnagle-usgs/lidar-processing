# /* vim: set tabstop=3 softtabstop=3 shiftwidth=3 shiftround autoindent: */
# $Id$

package require comm
set sf_a_id -1
set cir_id -1

source map.ytk
source rbgga.ytk
exp_send "require, \"atris.i\"\r"

proc send_sf { args } {
# Send a message to sf_a.tcl safely
	global sf_a_id
	if { $sf_a_id != -1 } {
		if { [catch { eval ::comm::comm send $sf_a_id $args }] } {
			set sf_a_id -1
		}
	}
}

proc sf_exists { } {
# See if sf_a exists
	global sf_a_id
	return [expr {$sf_a_id != -1}]
}

proc send_cir { args } {
# Send a message to cir.tcl safely
	global cir_id
	if { $cir_id != -1 } {
		if { [catch { eval ::comm::comm send $cir_id $args }] } {
			set cir_id -1
		}
	}
}

proc cir_exists { } {
# See if cir exists
	global cir_id
	return [expr {$cir_id != -1}]
}

# Test if a path exists, and pop up warning if not.
proc path_exists { path } {
	if { [ file isdirectory $path ]  == 0 } {
		tk_messageBox \
			-icon warning \
			-type ok \
			-message "$path doesn't exist."
	}
}

proc start_sf {} {
	global cir_id
	exec ./sf_a.tcl -parent [::comm::comm self] -cir $cir_id -camtype 2 &
}

proc init_sf {} {
	send_sf atris_init
}

proc start_cir {} {
	global sf_a_id
	exec ./cir.tcl -parent [::comm::comm self] -sf $sf_a_id &
}

proc init_cir {} {
}

proc send_sod_to_sf { somd } {
  catch {
   send_sf set timern sod
   send_sf set hsr $somd
   send_sf gotoImage
  }
}

proc depth_profile { data_file } {
	exp_send "depth_profile, \"$data_file\"\n"
}

proc plot_waypoints_file { fname } {
	exp_send "plot_waypoints_file, \"$fname\"\n"
}

proc adapt_process { imgdir hypdir ofname gps_src } {
	exp_send "require, \"adf.i\"\n"
	exp_send "adf_generate, \"$imgdir\", \"$hypdir\", \"$ofname\", adaptprog=1, gps_src=\"$gps_src\"\n"
}

proc adapt_process_progress { progress_txt progress_per } {
	send_sf set progress_txt "{$progress_txt}"
	send_sf set progress_per $progress_per
}

proc open_vessel_track { fn } {
	global gga utm _map
	set gga(llu) utm
	set utm 1
	exp_send "gga=open_vessel_track(ifn=\"$fn\")\n"
	MessageDlg .rbgga.msg -parent .rbgga -type ok -icon info -title "Data Loaded" \
		-message "The vessel track for the data you are viewing has been loaded. Please select a map file."
	load_map $utm
	if { $gga(mshape) == "None" } {
		set marker ",marker=0";
	} else {
		set marker ",marker=$ytk_PLMK_marker($gga(mshape))"
	}
	exp_send "show_vessel_track, color=\"$gga(linecolor)\", skip=$gga(skip)$marker, msize=$gga(msize), utm=$utm, win=$_map(window);\n"
	exp_send "utm= $utm;\n"
}

start_sf
