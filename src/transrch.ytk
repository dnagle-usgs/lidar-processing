# vim: set tabstop=3 softtabstop=3 shiftwidth=3 autoindent expandtab:
#
# $Id$
#
# 2008-11-21:  Interface to mtransect, mtransrch, and show_fstrack
#

exp_send "require, \"transrch.i\"\r"

############################################################

set trans_varlist { gt_fs gt_fsall }
set  width_list   { 50 100 150 200 250 300 }
set  color_list   {-7 -6 -5 -4 -3 -2 -1  1 2 3 4 5 6 7 }
set recall_list   { "" 0 1 2 3 }
set   show_list   { "" 1 2 3 }
set    fma_list   { 0 1 }

set fstrack_list  { gt_fs gt_fsall }
set     utm_list  { 0 1 }
set    skip_list  { 0 5 10 20 50 }
set     win_list  { 5 6 }
set   msize_list  { .1 .3 .5 .7 1.0 1.5 }
set   cname_list  { "black" "red" "blue" "green" "yellow" "magenta" "cyan" }

global varlist;

# number of mtransect frames to generate
set Xcnt         3

proc create_vars { cnt } {
   global Xcnt
   for { set i 1 } { $i <= $Xcnt } { incr i 1 } {
      set var_no$i       1
      set trans_var_no$i 1
      set trans_xfma$i   1
   }
}
create_vars $Xcnt

proc show_trans_varlist {} {
   global    tv              # window name, must be declared global before setting
   set       tv .transvar
   global    trans_varlist   # default list of variables
   destroy  $tv
   toplevel $tv
   wm title $tv "Variables"

   frame $tv.f1
   frame $tv.f2

   LabelEntry $tv.f1.add -width 8 -relief sunken -label "Add:" \
     -helptext "Add variable name to list" \
     -textvariable addvar \
     -padx 2
   $tv.f1.add bind <Return> {
      global trans_varlist
      append_trans_varlist $addvar
   }


   listbox $tv.f1.lb -selectmode single -width 12 \
      -xscrollcommand "$tv.f1.xscroll set" \
      -yscrollcommand "$tv.f1.yscroll set"
   scrollbar $tv.f1.xscroll -orient horizontal -command [list $tv.f1.lb xview]
   scrollbar $tv.f1.yscroll -command [list $tv.f1.lb yview]
   for { set i 0 } { $i<[llength $trans_varlist] } {incr i} {
      $tv.f1.lb insert end [lindex $trans_varlist $i]
   }

   Button $tv.f2.select -text "Select" -command {
    set trans_var [lindex $trans_varlist [$tv.f1.lb curselection]]
    $tw.f21.cln_vars setvalue @[$tv.f1.lb curselection]
   }

   Button $tv.f2.dismiss -text "Dismiss" -command {
      destroy $tv
   }

   pack \
      $tv.f1         \
      $tv.f1.add     \
      $tv.f1.lb      \
      $tv.f2         \
      $tv.f2.select  \
      $tv.f2.dismiss
}

proc append_trans_varlist {newvar} {
   global tw tv trans_varlist plist Xcnt

   ## save previous variable's constants in plist
   for { set i 1 } { $i <= $Xcnt } { incr i 1 } {
      set curvar  [lindex $trans_varlist [$tw.f2$i.cln_vars getvalue]]
   }
   set lslth [expr ([lsearch -exact $trans_varlist $curvar] + 1)]

   if {[lsearch -exact $trans_varlist $newvar] == -1} {
      lappend trans_varlist $newvar
      ## save current constants to $newvar
      set lslth [expr ( [llength $trans_varlist] -1 )]
      for { set i 1 } { $i <= $Xcnt } { incr i 1 } {
         $tw.f2$i.cln_vars configure -values $trans_varlist
      }
      # 2008-11-24: this line started to cause problems and it
      # seems to work without it, but that could be an artifact
      # of something else. - works again and is needed to manually
      # add variables
      $tv.f1.lb insert end $newvar
   } else {
      ## save current constants to $newvar even if it exists
      set lslth [expr ([lsearch -exact $trans_varlist $newvar] + 0)]
   }
   return $lslth
}


############################################################
# main
############################################################

# set data_path "/data/0"
set src_path [ file dirname [ info script ] ]
source "$src_path/gui_procs.ytk";
# cd $src_path

# Main Window
set      mw .trans
global   mw
destroy $mw

toplevel $mw
wm title $mw "Transect Processing"

set    tw  .trans.tw
destroy $tw
frame  $tw  -relief groove -borderwidth 3
frame  $tw.f1

proc create_transframes { cnt } {

   global tw
   # Transect frame
   for { set i 1 } { $i <= $cnt } { incr i 1 } {
      frame  $tw.f2$i
   }
   frame  $tw.f3
   frame  $tw.f4
   # -relief groove -borderwidth 3

   pack          \
      $tw        \
      $tw.f1     \
      -side top -fill x -padx 2

   for { set i 1 } { $i <= $cnt } { incr i 1 } {
      pack        \
         $tw.f2$i \
         -side top -fill x -padx 2
   }
   pack          \
      $tw.f4     \
      $tw.f3     \
      -side top -fill x -padx 2
}
create_transframes  $Xcnt


# plot track frame
set       pf   .trans.pf
   frame  $pf  -relief groove -borderwidth 3
   frame  $pf.f1
   frame  $pf.f2

pack          \
   $pf        \
   $pf.f1     \
   $pf.f2     \
   -side top -fill x -padx 2


############################################################
# Menu Bar
proc create_menubar {} {
   $mw configure -menu $mw.mb
      menu $mw.mb
      menu $mw.mb.file
      menu $mw.mb.process

#####################
   $mw.mb add cascade -label File -underline 0 -menu $mw.mb.file

   $mw.mb.file add command -label "Load" -command {
      puts "load something"
   }

   $mw.mb.file add command -label "Save" -command {
      puts "save something"
   }

   $mw.mb.file add command -label "Dismiss" -command {
      destroy $mw
   }
#####################
   $mw.mb add cascade -label Process -underline 0 -menu $mw.mb.process

   $mw.mb.process add command -label "Run" -command {
      puts "Process something"
   }
}



############################################################
# Transect Frame / Frame 1
Button $tw.f1.clean -text "      Clean:" -activebackground grey -command {

    set src_var [lindex $varlist [$tw.f1.src_vars getvalue]]
    set dst_var "cln_$src_var"
    set rv [append_trans_varlist $dst_var]

   exp_send "$dst_var = test_and_clean( $src_var )\r"
   $tw.f21.cln_vars setvalue @$rv
}
pack $tw.f1.clean -side left -fill x -padx 2
setTooltip $tw.f1.clean "Data must be converted\nto FS before using\nwith the functions below"


ComboBox $tw.f1.src_vars -values \
   $varlist \
   -helptext "Select any one of the following variables" \
   -editable 0 \
   -width 10 \
   -modifycmd {
      set var_no1   [ $tw.f1.src_vars getvalue ]
      # set var_type [lindex $varlist $var_no ]
   } \
   -postcommand {
      set var_no1   [ $tw.f1.src_vars getvalue ]
      # set var_type [ lindex $varlist $var_no ]
   }
   $tw.f1.src_vars setvalue first
pack $tw.f1.src_vars -side left -fill x -padx 2


Button $tw.f1.toVarMenu -text "mtransect variables" -activebackground grey -command {
   show_trans_varlist
}
pack $tw.f1.toVarMenu -side left -fill x -padx 2

#
############################################################
# Transect Frame / Frame 2

proc run_mt { id } {
   global tw trans_varlist fma_list show_list width_list color_list recall_list trans_xfma$id

   set src_var [lindex $trans_varlist [$tw.f2$id.cln_vars  getvalue]]
   set shw_var [lindex $show_list     [$tw.f2$id.showval   getvalue]]
   set wdt_var [lindex $width_list    [$tw.f2$id.widthval  getvalue]]
   set col_var [lindex $color_list    [$tw.f2$id.colorval  getvalue]]
   set rcl_var [lindex $recall_list   [$tw.f2$id.recallval getvalue]]
   set fma_var [subst \$trans_xfma$id]
#  set fma_var [lindex $fma_list      [$tw.f2$id.fmaval    getvalue]]

   puts "m=mtransect( $src_var, xfma=$fma_var show=$shw_var, w=$wdt_var, recall=$rcl_var, color=$col_var )"
#  exp_send "m$id=mtransect( $src_var, xfma=$fma_var, show=$shw_var, w=$wdt_var, recall=$rcl_var, color=$col_var, exp=1 )\r"
#  expect "END mtransect:"
#  exp_send "llst$id=llst;rx$id=rx;elevation$id=elevation\r"
}

proc create_transbuttons { cnt } {
   global tw trans_varlist fma_list show_list width_list color_list recall_list

   for { set tbi 1 } { $tbi <= $cnt } { incr tbi 1 } {

      if { $tbi == 1 } {
         Button $tw.f2$tbi.process -text "mtransect $tbi" -command "run_mt $tbi" \
            -bg azure3 -activebackground azure4
         setTooltip $tw.f2$tbi.process "This transect can be\nqueried using the\ntransrch and mtransrch\nbuttons below"
      } else {
         Button $tw.f2$tbi.process -text "mtransect $tbi" -command "run_mt $tbi" \
         -activebackground grey
      }

      pack $tw.f2$tbi.process -side left -fill x -padx 2


      ComboBox $tw.f2$tbi.cln_vars -values \
         $trans_varlist \
         -helptext "Select any one of the following variables" \
         -editable 0 \
         -width 10 \
         -modifycmd {
            # set trans_var_no1   [ $tw.f21.cln_vars getvalue ]
            # set var_type [lindex $trans_varlist $trans_var_no ]
         } \
         -postcommand {
            # set trans_var_no1   [ $tw.f21.cln_vars getvalue ]
            # set var_type [ lindex $trans_varlist $trans_var_no ]
            # puts "trans_var_no = $trans_var_no1"
         }
      $tw.f2$tbi.cln_vars setvalue @1
      pack $tw.f2$tbi.cln_vars -side left -fill x -padx 2

      west checkbutton $tw.f2$tbi.fma -text "xfma" -variable trans_xfma$tbi
      pack $tw.f2$tbi.fma -side left -fill x -padx 2


#     Label $tw.f2$tbi.fma -text "xfma="
#     ComboBox $tw.f2$tbi.fmaval -values $fma_list \
#        -helptext "0: overwrite graph\n1: clear window" \
#        -editable 0 \
#        -width 1
#        $tw.f2$tbi.fmaval setvalue @1
#     pack $tw.f2$tbi.fma $tw.f2$tbi.fmaval -side left -fill x -padx 2

      Label $tw.f2$tbi.show -text "show="
      ComboBox $tw.f2$tbi.showval -values $show_list \
         -helptext " : No display\n1: Display User selection\n2: Display found points" \
         -editable 0 \
         -width 2
         $tw.f2$tbi.showval setvalue @1
      pack $tw.f2$tbi.show $tw.f2$tbi.showval -side left -fill x -padx 2


      Label $tw.f2$tbi.width -text "w="
      ComboBox $tw.f2$tbi.widthval -values $width_list \
         -helptext "Select swath width" \
         -editable 0 \
         -width 3
         $tw.f2$tbi.widthval setvalue @1
      pack $tw.f2$tbi.width $tw.f2$tbi.widthval -side left -fill x -padx 2

      Label $tw.f2$tbi.recall -text "recall="
      ComboBox $tw.f2$tbi.recallval -values $recall_list \
         -helptext "0: Recall previous transect\n1: recall transect before that" \
         -editable 0 \
         -width 2
         $tw.f2$tbi.recallval setvalue first
      pack $tw.f2$tbi.recall $tw.f2$tbi.recallval -side left -fill x -padx 2

      Label $tw.f2$tbi.color -text "color="
      ComboBox $tw.f2$tbi.colorval -values $color_list \
         -helptext "-2: All Red\n-1: All Black\n0: Black First\n1: Red First\n2: Blue First\n3: Green First\n4: Yellow First\n5: Magenta First\n6: Cyan First\n" \
         -editable 0 \
         -width 2
         $tw.f2$tbi.colorval setvalue @8
      pack $tw.f2$tbi.color $tw.f2$tbi.colorval -side left -fill x -padx 2
  }
}

create_transbuttons $Xcnt

############################################################
# Transect Frame / Frame 3

Button $tw.f3.transrch -text "   transrch" -bg azure3 -activebackground azure4 -command {
   set  fs_var [lindex $trans_varlist     [$tw.f21.cln_vars   getvalue]]
   exp_send "transrch, $fs_var, m1, llst1, _rx=rx1, _el=elevation1\r"
}
pack $tw.f3.transrch -side left -fill x -padx 2
setTooltip $tw.f3.transrch  {
Click on a point in the transect plot window.

Displays information on a point from the
mtransect 1 plot.
}

Button $tw.f3.mtransrch -text "mtransrch" -bg azure3 -activebackground azure4 -command {
   set  fs_var [lindex $trans_varlist     [$tw.f21.cln_vars   getvalue]]
   exp_send "mtransrch, $fs_var, m1, llst1, _rx=rx1, _el=elevation1\r"
}
pack $tw.f3.mtransrch -side left -fill x -padx 2
setTooltip $tw.f3.mtransrch {
Click on points in the transect plot window.

Display information on multiple points from
the mtransect 1 plot.
}


############################################################
# Plot Frame / Frame 1

Button $pf.f1.show_fstrack -text "show_fstrack" -activebackground grey -command {
   set  fs_var [lindex $fstrack_list     [$pf.f1.fsval   getvalue]]
   set utm_var [lindex   $utm_list        [$pf.f1.utmval  getvalue]]
   set skp_var [lindex  $skip_list        [$pf.f1.skipval  getvalue]]
   set clr_var [lindex $cname_list        [$pf.f1.colorval  getvalue]]
   set win_var [lindex   $win_list        [$pf.f1.winval  getvalue]]
   set msz_var [lindex $msize_list        [$pf.f1.msizeval  getvalue]]
#   puts "show_fstrack, $fs_var, utm=$utm_var, skip=$skp_var, color=\"$clr_var\", win=$win_var, msize=$msz_var"
   exp_send "show_fstrack, $fs_var, utm=$utm_var, skip=$skp_var, color=\"$clr_var\", win=$win_var, msize=$msz_var\r"
   
}
pack $pf.f1.show_fstrack -side left -fill x -padx 2
setTooltip $pf.f1.show_fstrack "Displays positions from\ndata in specified window"


Label $pf.f1.fs -text "FS:"
ComboBox $pf.f1.fsval -values $fstrack_list \
   -helptext "FS variable to plot" \
   -editable 0 \
   -width 10 
   $pf.f1.fsval setvalue @1
pack $pf.f1.fsval -side left -fill x -padx 2

Label $pf.f1.utm -text "utm="
ComboBox $pf.f1.utmval -values $utm_list \
   -helptext "Plot data in UTM" \
   -editable 0 \
   -width 1 
   $pf.f1.utmval setvalue @1
pack $pf.f1.utm $pf.f1.utmval -side left -fill x -padx 2


Label $pf.f1.skip -text "skip="
ComboBox $pf.f1.skipval -values $skip_list \
   -helptext "Number of points to skip when plotting" \
   -editable 0 \
   -width 2 
   $pf.f1.skipval setvalue @1
pack $pf.f1.skip $pf.f1.skipval -side left -fill x -padx 2

Label $pf.f1.color -text "color="
ComboBox $pf.f1.colorval -values $cname_list \
   -helptext "1: Black\n2: Red\n3: Blue\n4: Green\n5: Yellow\n6: Magenta\n7: Cyan\n" \
   -editable 0 \
   -width 7
   $pf.f1.colorval setvalue @2
pack $pf.f1.color $pf.f1.colorval -side left -fill x -padx 2


Label $pf.f1.win -text "win="
ComboBox $pf.f1.winval -values $win_list \
   -helptext "window to plot data" \
   -editable 0 \
   -width 1 
   $pf.f1.winval setvalue @1
pack $pf.f1.win $pf.f1.winval -side left -fill x -padx 2


Label $pf.f1.msize -text "msize="
ComboBox $pf.f1.msizeval -values $msize_list \
   -helptext "size of point to plot" \
   -editable 0 \
   -width 3 
   $pf.f1.msizeval setvalue @0
pack $pf.f1.msize $pf.f1.msizeval -side left -fill x -padx 2


############################ Design #####################
# what do we want?

# cln_fs = test_and_clean(fs);
# m = mtransect(FS, xfma=, show=, w=, recall=, color= )
# mtransrch, FS, m, llst
#
# show_fstrack, gt_fsall, utm=1, skip=0, color=, win=, msize=
